{"version":3,"sources":["api/productApi/consts.js","api/productApi/reducers.js","api/cartApi/consts.js","api/cartApi/reducers.js","api/positionApi/consts.js","api/positionApi/reducers.js","api/userApi/consts.js","api/userApi/reducers.js","store.js","api/userApi/actions.js","components/Header.js","components/Footer.js","components/Rating.js","api/productApi/actions.js","components/Loader.js","components/Message.js","screens/ProductScreen.js","api/cartApi/actions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/UserListScreen.js","api/positionApi/positionsDataTransformer.js","api/positionApi/actions.js","components/PositionsList/CreatePosition.js","components/PositionsList/Position.js","components/PositionsList/PositionsList.component.js","components/Dashboard/AgentDashboard.js","components/Dashboard/StarDashboard.js","components/Dashboard/GuestDashboard.js","components/Dashboard/PAJDashboard.js","components/Dashboard/Dashboard.component.js","App.js","reportWebVitals.js","index.js"],"names":["productListActions","productActions","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","cartActions","CART_REMOVE_ITEM_REQUEST","CART_REMOVE_ITEM_SUCCESS","CART_REMOVE_ITEM_FAIL","CART_ADD_ITEM_REQUEST","CART_ADD_ITEM_SUCCESS","CART_ADD_ITEM_FAIL","positionListActions","positionActions","POSITION_LIST_FAIL","POSITION_LIST_SUCCESS","POSITION_LIST_REQUEST","UPDATE_POSITION_REQUEST","UPDATE_POSITION_SUCCESS","UPDATE_POSITION_FAIL","initialState","positionsData","ids","positions","userActions","userRoles","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTRATION_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","error","productDetails","product","reviews","cart","cartItems","item","existItem","find","cartItem","map","filter","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","userList","users","positionList","id","data","localStorage","getItem","JSON","parse","middleware","thunk","logger","store","createStore","applyMiddleware","Header","props","dispatch","useDispatch","useSelector","Navbar","className","bg","variant","sticky","Container","fluid","to","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","name","Item","onClick","a","removeItem","isUsersAdmin","Footer","Row","Col","Rating","value","text","color","style","defaultProps","Loader","Spinner","animation","role","width","height","margin","display","Message","children","Alert","ProductScreen","history","match","useState","qty","setQty","useEffect","params","axios","get","response","message","addToCartHandler","push","md","Image","src","image","alt","ListGroup","rating","numReviews","price","description","Card","countInStock","Form","Control","as","onChange","e","target","Array","keys","x","Button","disabled","productView","addToCart","getState","_id","setItem","stringify","CartScreen","location","productId","search","Number","split","removeFromCartHandler","removeFromCart","length","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","Group","control_d","Label","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","controlId","varriant","ProfileScreen","Authorization","token","put","updateUserProfile","Userlistscreen","isAdmin","Table","stripped","bordered","hover","responsive","href","admin","console","log","positionsAggregator","position","positionID","positionStatus","_isDeletedPosition","listPositions","companyID","url","deletePositionByID","CreatePosition","company","agentName","removeCreatePosition","initialData","handleSubmit","displayID","setDisplayID","positionName","setPositionName","subPositionName","setSubPositionName","positionDescription","setPositionDescription","positionLocation","setPositionLocation","requiredExperience","setRequiredExperience","offeredReward","setOfferedReward","stopPropagation","column","sm","plaintext","readOnly","defaultValue","companyName","rows","handleClear","Position","positionProps","enableUpdatePosition","enableDeletePosition","showReward","enablePromotePosition","reloadData","showFullData","setShowFullData","editPosition","setEditPosition","loadingPosition","setLoadingPosition","updatedPosition","setUpdatedPosition","positionDisplayId","handleSubmitUpdatedPosition","updatePositionByPositionID","handleSubmitDeletedPosition","editPositionProps","VisiblePart","border","Body","Title","Subtitle","Text","HiddenPart","mt","PositionslistComponent","positionsList","shouldReloadData","setShouldReloadData","singlePositionProps","AgentDashboard","relatedEntities","addingPosition","setAddingPosition","createPositionProps","span","offset","onCreatePosition","Stardashboard","Guestdashboard","Pajdashboard","DashboardComponent","Dashboard","StarDashboard","PAJDashboard","GuestDashboard","App","path","component","UserListScreen","DashboardScreen","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3daae58a.chunk.js","sourcesContent":["const productListActions = {\r\n    PRODUCT_LIST_FAIL: 'PRODUCT_LIST_FAIL',\r\n    PRODUCT_LIST_SUCCESS: 'PRODUCT_LIST_SUCCESS',\r\n    PRODUCT_LIST_REQUEST: 'PRODUCT_LIST_REQUEST'\r\n};\r\n\r\nconst productActions = {\r\n    PRODUCT_DETAILS_FAIL: 'PRODUCT_DETAILS_FAIL',\r\n    PRODUCT_DETAILS_SUCCESS: 'PRODUCT_DETAILS_SUCCESS',\r\n    PRODUCT_DETAILS_REQUEST: 'PRODUCT_DETAILS_REQUEST'\r\n};\r\n\r\nexport {\r\n    productListActions,\r\n    productActions\r\n};","import { productActions, productListActions } from './consts';\r\n\r\nconst {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL\r\n} = productListActions;\r\n\r\nconst {\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} = productActions;\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { ...state, loading: true, products: [] };\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { ...state, loading: false, products: action.payload };\r\n        case PRODUCT_LIST_FAIL:\r\n            return { ...state, loading: false, products: [], error: action.payload };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch(action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { ...state, loading: false, product: action.payload };\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return {...state};\r\n    }\r\n};","const cartActions = {\r\n    CART_ADD_ITEM_REQUEST: 'CART_ADD_ITEM_REQUEST',\r\n    CART_ADD_ITEM_SUCCESS: 'CART_ADD_ITEM_SUCCESS',\r\n    CART_ADD_ITEM_FAIL: 'CART_ADD_ITEM_FAIL',\r\n    CART_REMOVE_ITEM_REQUEST: 'CART_REMOVE_ITEM_REQUEST',\r\n    CART_REMOVE_ITEM_SUCCESS: 'CART_REMOVE_ITEM_SUCCESS',\r\n    CART_REMOVE_ITEM_FAIL: 'CART_REMOVE_ITEM_FAIL'\r\n};\r\n\r\nexport {\r\n    cartActions\r\n};","import { cartActions } from './consts';\r\n\r\nconst {\r\n    CART_REMOVE_ITEM_REQUEST,\r\n    CART_REMOVE_ITEM_SUCCESS,\r\n    CART_REMOVE_ITEM_FAIL,\r\n    CART_ADD_ITEM_REQUEST,\r\n    CART_ADD_ITEM_SUCCESS,\r\n    CART_ADD_ITEM_FAIL\r\n} = cartActions;\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM_REQUEST:\r\n            return { ...state, loading: true };\r\n        case CART_ADD_ITEM_SUCCESS:\r\n            const item = action.payload;\r\n            const existItem = state.cartItems.find(cartItem => cartItem.product === item.product);\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    cartItems: state.cartItems.map(cartItem =>\r\n                        cartItem.product === existItem.product ? item : cartItem)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    loading: false,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_ADD_ITEM_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        case CART_REMOVE_ITEM_REQUEST:\r\n            return { ...state, loading: true };\r\n        case CART_REMOVE_ITEM_SUCCESS:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(cartItem => cartItem.product !== action.payload)\r\n            }\r\n        case CART_REMOVE_ITEM_FAIL:\r\n            return { ...state, loading: false, error: action.payload };\r\n        default:\r\n            return {...state};\r\n    }\r\n};","const positionListActions = {\r\n    POSITION_LIST_FAIL: 'POSITION_LIST_FAIL',\r\n    POSITION_LIST_SUCCESS: 'POSITION_LIST_SUCCESS',\r\n    POSITION_LIST_REQUEST: 'POSITION_LIST_REQUEST'\r\n};\r\n\r\nconst positionActions = {\r\n    UPDATE_POSITION_FAIL: 'UPDATE_POSITION_FAIL',\r\n    UPDATE_POSITION_SUCCESS: 'UPDATE_POSITION_SUCCESS',\r\n    UPDATE_POSITION_REQUEST: 'UPDATE_POSITION_REQUEST'\r\n}\r\n\r\nexport {\r\n    positionListActions,\r\n    positionActions\r\n};","import { positionListActions, positionActions } from './consts';\r\n\r\nconst {\r\n    POSITION_LIST_FAIL,\r\n    POSITION_LIST_SUCCESS,\r\n    POSITION_LIST_REQUEST,\r\n} = positionListActions;\r\n\r\nconst {\r\n    UPDATE_POSITION_REQUEST,\r\n    UPDATE_POSITION_SUCCESS,\r\n    UPDATE_POSITION_FAIL,\r\n} = positionActions;\r\n\r\nconst initialState = {\r\n    positionsData: {\r\n        ids: [],\r\n        positions: {}\r\n    }\r\n};\r\n\r\n\r\nexport const positionListReducer = (state = { ...initialState }, action) => {\r\n    const {positionsData = {}} = state;\r\n    let id;\r\n    if (action?.payload?.id) {\r\n        id = action?.payload?.id;\r\n    }\r\n\r\n    switch(action.type) {\r\n        case POSITION_LIST_REQUEST:\r\n            return { ...state, loading: true, positionsData  };\r\n        case POSITION_LIST_SUCCESS:\r\n            return { ...state, loading: false, positionsData: action.payload };\r\n        case POSITION_LIST_FAIL:\r\n            return { ...state, loading: false, positionsData, error: action.payload };\r\n        case UPDATE_POSITION_REQUEST:\r\n            return { ...state, positionsData: {...positionsData, positions: {...positionsData.positions, [id]: {loading: true}}} };\r\n        case UPDATE_POSITION_SUCCESS:\r\n            return { ...state, positionsData: {...positionsData, positions: {...positionsData.positions, [id]: {loading: false, data: action.payload.data}}} };\r\n        case UPDATE_POSITION_FAIL:\r\n            return { ...state, positionsData: {...positionsData, positions: {...positionsData.positions, [id]: {loading: false, data: action.payload.error}}} };\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n","const userActions = {\r\n    USER_LOGIN_REQUEST: 'USER_LOGIN_REQUEST',\r\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\r\n    USER_LOGOUT: 'USER_LOGOUT',\r\n    USER_REGISTRATION_REQUEST: 'USER_REGISTRATION_REQUEST',\r\n    USER_REGISTRATION_SUCCESS: 'USER_REGISTRATION_SUCCESS',\r\n    USER_REGISTRATION_FAIL: 'USER_REGISTRATION_FAIL',\r\n    USER_DETAILS_REQUEST: 'USER_DETAILS_REQUEST',\r\n    USER_DETAILS_SUCCESS: 'USER_DETAILS_SUCCESS',\r\n    USER_DETAILS_FAIL: 'USER_DETAILS_FAIL',\r\n    USER_DETAILS_RESET: 'USER_DETAILS_RESET',\r\n    USER_UPDATE_PROFILE_REQUEST: 'USER_UPDATE_PROFILE_REQUEST',\r\n    USER_UPDATE_PROFILE_SUCCESS: 'USER_UPDATE_PROFILE_SUCCESS',\r\n    USER_UPDATE_PROFILE_FAIL: 'USER_UPDATE_PROFILE_FAIL',\r\n    USER_LIST_REQUEST: 'USER_LIST_REQUEST',\r\n    USER_LIST_SUCCESS: 'USER_LIST_SUCCESS',\r\n    USER_LIST_FAIL: 'USER_LIST_FAIL',\r\n    USER_LIST_RESET: 'USER_LIST_RESET',\r\n};\r\n\r\nconst userRoles = {\r\n    GUEST: 'GUEST',\r\n    STAR: 'STAR',\r\n    SUPERSTAR: 'SUPERSTAR',\r\n    COMPANYAGENT: 'COMPANYAGENT',\r\n    COMPANYADMIN: 'COMPANYADMIN',\r\n    PAJ: 'PAJ',\r\n    PAJADMIN: 'PAJADMIN'\r\n};\r\n\r\nexport {\r\n    userActions,\r\n    userRoles\r\n};","import { userActions } from './consts';\r\n\r\nconst {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTRATION_REQUEST,\r\n    USER_REGISTRATION_SUCCESS,\r\n    USER_REGISTRATION_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET\r\n} = userActions;\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LOGOUT:\r\n            return { loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTRATION_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTRATION_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTRATION_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload };\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return {};\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { ...state, loading: true };\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload };\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_DETAILS_RESET:\r\n            return {};\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true };\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload };\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_LIST_RESET:\r\n            return { loading: false, users: [] };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { productListReducer, productDetailsReducer } from './api/productApi/reducers';\r\nimport { cartReducer } from './api/cartApi/reducers';\r\nimport { positionListReducer } from './api/positionApi/reducers';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer } from './api/userApi/reducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    positionList: positionListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n};\r\n\r\nconst middleware = [thunk, logger];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store; ","import axios from 'axios';\r\nimport { userActions } from './consts';\r\n\r\nconst {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTRATION_REQUEST,\r\n    USER_REGISTRATION_SUCCESS,\r\n    USER_REGISTRATION_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DETAILS_RESET\r\n} = userActions;\r\n\r\nexport const login = (props) => async (dispatch) => {\r\n    try {\r\n        const { email, password } = props;\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        localStorage.removeItem('userInfo');\r\n        dispatch({type: USER_LOGOUT});\r\n        dispatch({type: USER_LIST_RESET});\r\n        dispatch({type: USER_DETAILS_RESET})\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGOUT\r\n        });\r\n    }\r\n}\r\n\r\nexport const register = (props) => async (dispatch) => {\r\n    try {\r\n        const { name, email, password } = props;\r\n        dispatch({\r\n            type: USER_REGISTRATION_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/',\r\n            { name, email, password },\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_REGISTRATION_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTRATION_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        const { userLogin: { userInfo } } = getState();\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        const { userLogin: { userInfo } } = getState();\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile`,\r\n            user,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users`,\r\n            config\r\n        );\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        });\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        });\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../api/userApi/actions';\r\n\r\n\r\nconst Header = (props) => {\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n    };\r\n\r\n    return (\r\n        <Navbar className='paj-nav' bg=\"dark\" variant='tran' sticky=\"top\" bg='red' expand=\"lg\">\r\n            <Container fluid className='pr-0 pl-0'>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand>\r\n                        <div className='paj-logo'>\r\n                            Pick a Job\r\n                        </div>\r\n                    </Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link>\r\n                                Cart\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                        {\r\n                            userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='userName'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        Logout\r\n                                    </NavDropdown.Item>\r\n                                </NavDropdown>\r\n                            ) :\r\n                                <LinkContainer to='/login'>\r\n                                    <Nav.Link className='main-cta'>\r\n                                        Sign In\r\n                                    </Nav.Link>\r\n                                </LinkContainer>\r\n                        }\r\n                        {userInfo && userInfo.isUsersAdmin && (\r\n                            <NavDropdown title='Admin' id='adminMenu'>\r\n                                <LinkContainer to='/admin/userList'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productList'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>\r\n                        )}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = (props) => {\r\n    \r\n\r\n    return (\r\n        <footer className='paj-footer'>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; Pick-A-Job\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n\r\n\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-start-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-start-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-start-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-start-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-start-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825'\r\n}\r\n\r\n\r\nexport default Rating;","import axios from 'axios';\r\nimport { productActions, productListActions } from './consts';\r\n\r\nconst {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL\r\n} = productListActions;\r\n\r\nconst {\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL\r\n} = productActions;\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get('/api/products');\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nexport default function Loader(props) {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width:'100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\nconst Message = ({ variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    );\r\n};\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\n\r\nexport default Message;","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport { listProductDetails } from '../api/productApi/actions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const {loading, error, product} = productDetails;\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const productView = (product) => {\r\n        return (\r\n            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>{product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            Qty:\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Form.Control as='select' value={qty} onChange={(e) =>\r\n                                                setQty(e.target.value)}>\r\n                                                    {\r\n                                                        [...Array(product.countInStock).keys()].map(x => (\r\n                                                            <option key={x + 1} value={x + 1}>\r\n                                                                {x + 1}\r\n                                                            </option>\r\n                                                        ))\r\n                                                    }\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    onClick={addToCartHandler}\r\n                                    className='btn-block'\r\n                                    type='button'\r\n                                    disabled={product.countInStock === 0}\r\n                                >\r\n                                    ADD TO CART\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>\r\n                Go Back\r\n            </Link>\r\n            {loading\r\n                ? <Loader />\r\n                : (error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : productView(product))\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen;","import axios from 'axios';\r\nimport { cartActions } from './consts';\r\n\r\nconst {\r\n    CART_REMOVE_ITEM_REQUEST,\r\n    CART_REMOVE_ITEM_SUCCESS,\r\n    CART_REMOVE_ITEM_FAIL,\r\n    CART_ADD_ITEM_REQUEST,\r\n    CART_ADD_ITEM_SUCCESS,\r\n    CART_ADD_ITEM_FAIL\r\n} = cartActions;\r\n\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CART_ADD_ITEM_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n        dispatch({\r\n            type: CART_ADD_ITEM_SUCCESS,\r\n            payload: {\r\n                product: data._id,\r\n                name: data.name,\r\n                image: data.image,\r\n                price: data.price,\r\n                countInStock: data.countInStock,\r\n                qty\r\n            }\r\n        })\r\n\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CART_ADD_ITEM_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CART_REMOVE_ITEM_REQUEST\r\n        })\r\n        // const { data } = await axios.get(`/api/products/${id}`);\r\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n\r\n        dispatch({\r\n            type: CART_REMOVE_ITEM_SUCCESS,\r\n            payload: id\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CART_REMOVE_ITEM_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../api/cartApi/actions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CartScreen","import React from 'react'\r\nimport { Container, Row, Col} from 'react-bootstrap'\r\n\r\nexport default function FormContainer({children}) {\r\n    return (\r\n        <div className='paj-contact-form'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../api/userApi/actions';\r\n\r\nexport default function LoginScreen({ location, history }) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({email, password}));\r\n    };\r\n\r\n    return (\r\n        <div className='paj-page-header'>\r\n            <Container fluid>\r\n                <Container>\r\n                    <Row className='justify-content-center'>\r\n                        <h1>Sign In</h1>\r\n                    </Row>\r\n                </Container>\r\n                \r\n                {loading ? <Loader /> :\r\n                    (\r\n                        <FormContainer>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group control_d='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='email'\r\n                                        placeholder='Enter email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                    </Form.Group>\r\n                                <Form.Group control_d='password'>\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control\r\n                                        type='password'\r\n                                        placeholder='Enter Password'\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    >\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                    \r\n                                <Button type='submit' variant='primary'>\r\n                                    Sign In\r\n                                </Button>\r\n                            </Form>\r\n                    \r\n                            <Row className='py-3'>\r\n                            <Col>\r\n                                New Customer? \r\n                                <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                                    Register\r\n                                </Link>\r\n                            </Col>\r\n                        </Row>\r\n                        </FormContainer>\r\n                    )\r\n                }\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Row, Col, Button, Form} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../api/userApi/actions';\r\n\r\nexport default function RegisterScreen({ location, history }) {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    const redirect = location.search ? location.search.split('=')[1] : '/';\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userRegister = useSelector(state => state.userRegister);\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register({name, email, password}));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='paj-page-header'>\r\n            <Container fluid>\r\n                <Container>\r\n                        <Row className='justify-content-center'>\r\n                            <h1>Register</h1>\r\n                        </Row>\r\n                    </Container>\r\n                <FormContainer>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    {loading && <Loader />}\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Full Name</Form.Label>\r\n                            <Form.Control\r\n                                type='name'\r\n                                placeholder='Enter your name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email Address</Form.Label>\r\n                            <Form.Control\r\n                                type='email'\r\n                                placeholder='Enter email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='password'>\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Enter Password'\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='confirmPassword'>\r\n                            <Form.Label>Confirm Password</Form.Label>\r\n                            <Form.Control\r\n                                type='password'\r\n                                placeholder='Cinfirm Password'\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            >\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Button type='submit' varriant='primary'>\r\n                            Register\r\n                        </Button>\r\n                    </Form>\r\n                        \r\n                    <Row className='py-3'>\r\n                        <Col>\r\n                            Already have an account? \r\n                            <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                                Log In\r\n                            </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </FormContainer>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { Row, Col, Button, Form} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { getUserDetails, updateUserProfile } from '../api/userApi/actions';\r\n\r\nexport default function ProfileScreen({ location, history }) {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n    \r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login');\r\n        } else {\r\n            if(!user || !user.name || success) {\r\n                dispatch(getUserDetails('profile'))\r\n            } else {\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name,\r\n                email,\r\n                password\r\n            }))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Full Name</Form.Label>\r\n                        <Form.Control\r\n                            type='name'\r\n                            placeholder='Enter your name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            type='email'\r\n                            placeholder='Enter email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                \r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { listUsers } from '../api/userApi/actions';\r\n\r\nexport default function Userlistscreen({ history }) {\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector(state => state.userList);\r\n    const { loading, error, users } = userList;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers());\r\n        } else {\r\n            history.push('/login');\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n\r\n    const deleteHandler = (id) => {\r\n        console.log(id);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {loading && <Loader />}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {users && (\r\n                <Table stripped bordered hover responsive className='table-sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td><a href={`mailto: ${user.email}`}>{user.email}</a></td>\r\n                                <td>{user.admin ? (\r\n                                    <i className='fas fa-check' style={{ color: 'green' }} />\r\n                                ) : (\r\n                                        <i className='fas fa-times' style={{ color: 'red' }} />\r\n                                    )}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/user/${user._id}/edit`}>\r\n                                        <Button variant='light' className='btn-sm'>\r\n                                            <i className='fas fa-edit' />\r\n                                        </Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash' />\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n","const _isDeletedPosition = (position) => position.positionStatus === 'DELETED';\r\n\r\nexport const positionsAggregator = (data) => {\r\n    const ids = [];\r\n\r\n    const positions = data.reduce((positions, position) => {\r\n        const positionID = position._id;\r\n        if (_isDeletedPosition(position)) {\r\n            return {...positions};\r\n        }\r\n\r\n        ids.push(positionID);\r\n        return {\r\n            ...positions,\r\n            [positionID]: {\r\n                loading: false,\r\n                data: position,\r\n                error: null\r\n            }\r\n        };\r\n    }, {});\r\n\r\n    const response = {\r\n        ids,\r\n        positions\r\n    };\r\n\r\n    return response;\r\n}","import axios from 'axios';\r\nimport { positionListActions, positionActions } from './consts';\r\nimport {positionsAggregator} from './positionsDataTransformer';\r\n\r\nconst {\r\n    POSITION_LIST_FAIL,\r\n    POSITION_LIST_SUCCESS,\r\n    POSITION_LIST_REQUEST,\r\n} = positionListActions;\r\n\r\nconst {\r\n    UPDATE_POSITION_REQUEST,\r\n    UPDATE_POSITION_SUCCESS,\r\n    UPDATE_POSITION_FAIL,\r\n} = positionActions;\r\n\r\n\r\nexport const listPositions = (companyID = null) => async (dispatch) => {\r\n    try {\r\n        const url = companyID ? `/api/positions/${companyID}` : '/api/positions';\r\n        dispatch({ type: POSITION_LIST_REQUEST })\r\n        const { data } = await axios.get(url);\r\n\r\n        dispatch({\r\n            type: POSITION_LIST_SUCCESS,\r\n            payload: positionsAggregator(data)\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: POSITION_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updatePositionByPositionID = (positionID, payload) => async (dispatch, getState) => {\r\n    try {\r\n        const url = `/api/positions/${positionID}`;\r\n        const { userLogin: { userInfo } } = getState();\r\n        dispatch({\r\n            type: UPDATE_POSITION_REQUEST,\r\n            payload: {id: positionID}\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data = {} } = await axios.put(url, payload, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_POSITION_SUCCESS,\r\n            payload: {id: positionID, data}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_POSITION_FAIL,\r\n            payload: {id: positionID, error: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message}\r\n                \r\n        })\r\n    }\r\n}\r\n\r\nexport const deletePositionByID = (positionID, payload) => async (dispatch, getState) => {\r\n    try {\r\n        const url = `/api/positions/${positionID}`;\r\n        const { userLogin: { userInfo } } = getState();\r\n        dispatch({\r\n            type: UPDATE_POSITION_REQUEST,\r\n            payload: {id: positionID}\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data = {} } = await axios.put(url, {...payload, positionStatus: 'DELETED'}, config);\r\n\r\n        dispatch({\r\n            type: UPDATE_POSITION_SUCCESS,\r\n            payload: {id: positionID, data}\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_POSITION_FAIL,\r\n            payload: {id: positionID, error: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message}\r\n                \r\n        })\r\n    }\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { Card, Row, Col, Button, Form, Container } from 'react-bootstrap';\r\n\r\nexport default function CreatePosition(props) {\r\n    const {\r\n        company = {},\r\n        agentName = '',\r\n        removeCreatePosition,\r\n        initialData = {},\r\n        handleSubmit = () => {},\r\n        title = 'Create New Position' } = props;\r\n    \r\n    const [displayID, setDisplayID] = useState(initialData?.displayID || '');\r\n    const [positionName, setPositionName] = useState(initialData?.positionName || '');\r\n    const [subPositionName, setSubPositionName] = useState(initialData?.subPositionName || '');\r\n    const [positionDescription, setPositionDescription] = useState(initialData?.positionDescription || '');\r\n    const [positionLocation, setPositionLocation] = useState(initialData?.positionLocation || '');\r\n    const [requiredExperience, setRequiredExperience] = useState(initialData?.requiredExperience || '');\r\n    const [offeredReward, setOfferedReward] = useState(initialData?.offeredReward || 0);\r\n\r\n    const onSubmit = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        const payload = {\r\n            displayID,\r\n            positionName,\r\n            subPositionName,\r\n            positionDescription,\r\n            positionLocation,\r\n            requiredExperience,\r\n            offeredReward\r\n        };\r\n        handleSubmit(payload);\r\n        console.log('submitted');\r\n        removeCreatePosition();\r\n    }\r\n\r\n    const handleClear = (e) => {\r\n        e.stopPropagation();\r\n        console.log('cleared');\r\n    }\r\n\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header className=\"text-center\" onClick={removeCreatePosition}>{title}</Card.Header>\r\n            <Container className='justify-content-md-center'>\r\n                <Form onSubmit={(e) => onSubmit(e)}>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextCompany\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Company Name\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control plaintext readOnly defaultValue={company.companyName} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formPlaintextAgent\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Agent Name\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control plaintext readOnly defaultValue={agentName} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextDisplayID\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Display ID\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" defaultValue={displayID} onChange={(e) => {setDisplayID(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextPositionName\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Position Name\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" defaultValue={positionName} onChange={(e) => {setPositionName(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextSubPositionName\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Sub Position Name\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" defaultValue={subPositionName} onChange={(e) => {setSubPositionName(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextPositionDescription\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Position Description\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control as=\"textarea\" rows={3} defaultValue={positionDescription} onChange={(e) => {setPositionDescription(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextPositionLocation\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Position Location\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" defaultValue={positionLocation} onChange={(e) => {setPositionLocation(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextRequiredExperience\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Required Experience\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"text\" defaultValue={requiredExperience} onChange={(e) => {setRequiredExperience(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} controlId=\"formtextOfferedReward\">\r\n                        <Form.Label column sm=\"2\">\r\n                            Offered Reward (NIS)\r\n                        </Form.Label>\r\n                        <Col sm=\"10\">\r\n                            <Form.Control type=\"number\" defaultValue={offeredReward} onChange={(e) => {setOfferedReward(e?.target?.value)}} />\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Submit Position\r\n                    </Button>\r\n                    <Button variant='light' className=\"pull-right\" onClick={(e) => handleClear(e)}>\r\n                        Clear All\r\n                    </Button>\r\n                </Form>\r\n            </Container>\r\n        </Card>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport {updatePositionByPositionID, deletePositionByID} from '../../api/positionApi/actions';\r\nimport Loader from '../Loader';\r\nimport CreatePosition from './CreatePosition';\r\n\r\n// deletePositionByPositionID,\r\n//         updatePositionByPositionID\r\n\r\nconst Position = ({positionID, positionProps}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const position = useSelector(state => state?.positionList?.positionsData?.positions[positionID]);\r\n\r\n    const {enableUpdatePosition, enableDeletePosition, showReward, enablePromotePosition, agentName, company, reloadData} = positionProps;\r\n    const [showFullData, setShowFullData] = useState(false);\r\n    const [editPosition, setEditPosition] = useState(false);\r\n    const [loadingPosition, setLoadingPosition] = useState(false);\r\n    const [updatedPosition, setUpdatedPosition] = useState(position.data || {});\r\n\r\n    const {positionName, subPositionName, positionDisplayId, positionDescription, positionLocation, requiredExperience, offeredReward , _id} = updatedPosition;\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(position?.loading && !loadingPosition) {\r\n            setLoadingPosition(true);\r\n            setShowFullData(true);\r\n        }\r\n        if(position && !position.loading && position.data && loadingPosition) {\r\n            setLoadingPosition(false);\r\n            setUpdatedPosition(position.data);\r\n        }\r\n    }, [dispatch, position, loadingPosition])\r\n\r\n    const expandPosition = () => {\r\n        setShowFullData(!showFullData);\r\n    }\r\n\r\n    const onUpdatePosition = (e) => {\r\n        e.stopPropagation();\r\n        setEditPosition(true);\r\n    };\r\n    const onDeletePosition = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n    const onPromotePosition = (e) => {\r\n        e.stopPropagation();\r\n    };\r\n\r\n    const handleSubmitUpdatedPosition = (payload) => {\r\n        dispatch(updatePositionByPositionID(_id, payload));\r\n    }\r\n\r\n    const handleSubmitDeletedPosition = async (payload) => {\r\n        await dispatch(deletePositionByID(_id, payload));\r\n        reloadData();\r\n    }\r\n\r\n    const editPositionProps = {\r\n        initialData: {\r\n            displayID: positionDisplayId,\r\n            positionName: positionName,\r\n            subPositionName: subPositionName,\r\n            positionDescription: positionDescription,\r\n            positionLocation: positionLocation,\r\n            requiredExperience: requiredExperience,\r\n            offeredReward: offeredReward\r\n        },\r\n        company,\r\n        agentName,\r\n        title: 'update position',\r\n        removeCreatePosition: () => setEditPosition(false),\r\n        handleSubmit: (payload) => handleSubmitUpdatedPosition(payload),\r\n    };\r\n\r\n    const positionActions = (\r\n        <>\r\n            {enableUpdatePosition && (<i className=\"far fa-edit\" onClick={onUpdatePosition}></i>)}\r\n            {enableDeletePosition && (<i className=\"far fa-trash-alt\" onClick={handleSubmitDeletedPosition}></i>)}\r\n            {enablePromotePosition && (<i className=\"fas fa-ad\" onClick={onPromotePosition}></i>)}\r\n        </>\r\n    );\r\n\r\n    const VisiblePart = (\r\n        <Card border=\"primary\" onClick={expandPosition}>\r\n            <Card.Body>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Title>{positionName}</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        {positionActions}\r\n                    </Col>\r\n                </Row>\r\n                <Card.Subtitle className=\"mb-2 text-muted\">{company.companyName}</Card.Subtitle>\r\n                <Card.Text>{subPositionName}</Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n    const HiddenPart = loadingPosition ? <Loader /> : (\r\n        <Card>\r\n            <Row className=\"p-3\">\r\n                <Col>{`Position ID: ${positionDisplayId}`}</Col>\r\n                <Col>{`Location: ${positionLocation}`}</Col>\r\n            </Row>\r\n            <Card.Body>\r\n                <Card.Text mt={'50px'}>{positionDescription}</Card.Text>\r\n                <Row className=\"p-3\">\r\n                    <Col>{requiredExperience}</Col>\r\n                    <Col>{showReward && offeredReward}</Col>\r\n                </Row>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n    return editPosition ? (\r\n        <CreatePosition {...editPositionProps} />\r\n    ) : (\r\n        <>\r\n            {VisiblePart}\r\n            {showFullData && HiddenPart}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Position;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup, Col } from 'react-bootstrap';\r\nimport { listPositions } from '../../api/positionApi/actions'\r\nimport Position from './Position';\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\n\r\n\r\nconst PositionslistComponent = (props) => {\r\n    const {company, positionProps} = props;\r\n    const dispatch = useDispatch();\r\n    const positionsList = useSelector(state => state.positionList);\r\n    const { loading, error, positionsData = {} } = positionsList;\r\n    const {ids = []} = positionsData;\r\n\r\n    const [shouldReloadData, setShouldReloadData] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const action = company && company._id ? listPositions(company._id) : listPositions();\r\n        if(shouldReloadData) {\r\n            dispatch(action);\r\n        }\r\n        // if(company && company._id) {\r\n        //     dispatch(listPositions(company._id));\r\n        // } else {\r\n        //     dispatch(listPositions());\r\n        // }\r\n        setShouldReloadData(false);\r\n    }, [dispatch, company, shouldReloadData]);\r\n\r\n    const singlePositionProps = {\r\n        reloadData: () => setShouldReloadData(true),\r\n        ...positionProps\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Positions List</h1>\r\n            {loading\r\n                ? <Loader />\r\n                : (error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : <ListGroup>\r\n                        {\r\n                            ids.map(positionID => (\r\n                                <ListGroup.Item key={positionID} variant=\"flush\">\r\n                                    <Position positionID={positionID} positionProps={singlePositionProps} />\r\n                                </ListGroup.Item>\r\n                            ))\r\n                        }\r\n                    </ListGroup>)\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PositionslistComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Row, Nav, Col } from 'react-bootstrap';\r\nimport PositionList, { CreatePosition } from '../PositionsList'\r\n\r\n\r\nconst AgentDashboard = (props) => {\r\n    const { userInfo: { name: agentName, relatedEntities: { company } } } = props;\r\n    const [addingPosition, setAddingPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        \r\n    }, []);\r\n\r\n    const onCreatePosition = (e) => {\r\n        e.stopPropagation()\r\n        if (!addingPosition) {\r\n            setAddingPosition(true);\r\n        }\r\n    }\r\n\r\n    const removeCreatePosition = () => {\r\n        if (addingPosition) {\r\n            setAddingPosition(false);\r\n        }\r\n    }\r\n\r\n    const createPositionProps = {\r\n        agentName: agentName,\r\n        company: company,\r\n        removeCreatePosition,\r\n    };\r\n\r\n    const editPositionProps = {\r\n        enableUpdatePosition: true,\r\n        enableDeletePosition: true,\r\n        enablePromotePosition: false,\r\n        showReward: true,\r\n        company: company,\r\n        agentName: agentName,\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col><h3>Agent Dashboard</h3></Col>\r\n                <Col md={{ span: 4, offset: 4 }}>\r\n                    <div onClick={(e) => onCreatePosition(e)}>\r\n                        <i className=\"fas fa-plus-circle fa-3x\"></i>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            {addingPosition && <CreatePosition {...createPositionProps} />}\r\n            <PositionList company={company} positionProps={editPositionProps} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AgentDashboard;\r\n","import React from 'react'\r\n\r\nexport default function Stardashboard(props) {\r\n    \r\n\r\n    return (\r\n        <>\r\n           <h1>This is STAR Dashboard</h1> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Col, Container, Row, Nav } from 'react-bootstrap'\r\nexport default function Guestdashboard(props) {\r\n    \r\n\r\n    return (\r\n        <div className='paj-guest-dashboard'>\r\n            <div className='paj-hero'>\r\n                <Container>\r\n                    <Row>\r\n                        <Col sm={12} md={6} className='hero-text pl-0 pr-0'>\r\n                            <h1>The best place to <span>pick a Job</span></h1>\r\n                            <p>\r\n                                here will be secondary setxt about the company.\r\n                            </p>\r\n                            <p>\r\n                                this will a text that will explin what we are all about\r\n                            </p>\r\n                            <p>\r\n                                <Nav.Link className='main-cta'>\r\n                                    Sign up for a Demo\r\n                                </Nav.Link>\r\n                            </p>\r\n                        </Col>\r\n                        <Col sm={12} md={6} className='pl-0 pr-0'>\r\n                            <div className='hero-img'>\r\n                                <div className='img1 vertical-move'></div>\r\n                                <div className='img2 horizontal-move'></div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container fluid className='paj-data'>\r\n                <Container >\r\n                    <Row className='paj-cards'>\r\n                        <Col sm={12} md={4}>\r\n                            <div className='card card-1'>\r\n                                <div className='icon icon-1' />\r\n                                <h2>\r\n                                    Private Users\r\n                                </h2>\r\n                                <p>\r\n                                Lorem ipsum dolor sit amet, consecte adipiscing elit, \r\n                                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua dui.\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={12} md={4}>\r\n                            <div className='card card-2'>\r\n                                <div className='icon icon-2' />\r\n                                <h2>\r\n                                    Companies\r\n                                </h2>\r\n                                <p>\r\n                                Lorem ipsum dolor sit amet, consecte adipiscing elit, \r\n                                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua dui.\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={12} md={4}>\r\n                            <div className='card card-3'>\r\n                                <div className='icon icon-3' />\r\n                                <h2>\r\n                                    Stars\r\n                                </h2>\r\n                                <p>\r\n                                Lorem ipsum dolor sit amet, consecte adipiscing elit, \r\n                                sed do eiusmod tempor incididunt ut labore et dolore magna aliqua dui.\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <div className='feature-border' />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm={12} md={8}>\r\n                            <div className='paj-content'>\r\n                                <h2>\r\n                                    Trusted by 25,000+ happy customers.\r\n                                </h2>\r\n                                <p>\r\n                                    With lots of unique blocks, you can easily build\r\n                                    a page without coding. Build your next website\r\n                                    within few minutes.\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                        <Col sm={12} md={4}>\r\n                            <div className='paj-rate-box'>\r\n                                <h3>\r\n                                    25k\r\n                                </h3>\r\n                                <p>\r\n                                    Active users visiting\r\n                                    us every month!\r\n                                </p>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container fluid className='paj-section paj-section-1 mt-5'>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col sm={12} md={5}>\r\n                                <div className='paj-info' />\r\n                            </Col>\r\n                            <Col sm={12} md={7}>\r\n                                <div className='paj-info-text'>\r\n                                    <h3>\r\n                                        Some headline about the compeny\r\n                                    </h3>\r\n                                    <p>\r\n                                    We designed and tested prototypes that helped identify pain points in the account creation process. Together, we shaped the new standard.\r\n                                    </p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </Container>\r\n            </Container>\r\n        </div>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Pajdashboard(props) {\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h1>This is PAJ Dashboard</h1> \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { userRoles } from '../../api/userApi/consts'\r\nimport Loader from '../Loader';\r\nimport Message from '../Message';\r\nimport AgentDashboard from './AgentDashboard'\r\nimport StarDashboard from './StarDashboard'\r\nimport GuestDashboard from './GuestDashboard'\r\nimport PAJDashboard from './PAJDashboard'\r\n\r\n\r\nexport default function DashboardComponent(props) {\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo, loading, error } = userLogin;\r\n\r\n    const roleName = userInfo?.role || userRoles.GUEST;\r\n    let Dashboard = null;\r\n\r\n    switch(roleName) {\r\n        case userRoles.STAR:\r\n            Dashboard = StarDashboard;\r\n            break;\r\n        case userRoles.SUPERSTAR:\r\n            Dashboard = StarDashboard;\r\n            break;\r\n        case userRoles.COMPANYAGENT:\r\n            Dashboard = AgentDashboard;\r\n            break;\r\n        case userRoles.COMPANYADMIN:\r\n            Dashboard = AgentDashboard;\r\n            break;\r\n        case userRoles.PAJ:\r\n            Dashboard = PAJDashboard;\r\n            break;\r\n        case userRoles.PAJADMIN:\r\n            Dashboard = PAJDashboard;\r\n            break;\r\n        case userRoles.GUEST:\r\n        default:\r\n            Dashboard = GuestDashboard;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading\r\n                ? <Loader />\r\n                : (error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : <Dashboard userInfo={userInfo} />)\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'; \r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n// import HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport DashboardScreen from './components/Dashboard/Dashboard.component';\r\nimport './App.css';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n        <Header />\r\n        <main>\r\n          <Route path='/login' component={LoginScreen} />\r\n          <Route path='/register' component={RegisterScreen} />\r\n          <Route path='/profile' component={ProfileScreen} />\r\n          <Route path='/product/:id' component={ProductScreen} />\r\n          <Route path='/cart/:id?' component={CartScreen} />\r\n          <Route path='/admin/userList' component={UserListScreen} />\r\n          <Route path='/' component={DashboardScreen} exact />\r\n        </main>\r\n        <Footer />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}